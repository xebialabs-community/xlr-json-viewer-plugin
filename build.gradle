/* Gradle plugins used in this project */
buildscript {
  dependencies {
    classpath 'com.xebialabs.gradle.plugins.xlrelease:gradle-xl-release-plugin-plugin:0.0.1'
  }
  repositories {
    maven {
      credentials {
        username project.property("nexusUserName")
        password project.property("nexusPassword")
      }
      url "${project.property('nexusBaseUrl')}/repositories/releases"
    }
  }
}

plugins {
  id 'java'
  id 'com.moowork.node' version '0.12'
//  id "org.ajoberstar.release-opinion" version "1.4.2" // If you want to use the gradle release plugin uncomment this line
  id "com.github.rzabini.gradle-jython" version "1.0.0"
}
apply plugin: 'com.xebialabs.xl-release.plugin'

/* Configuration of Node */
node {
  version = '5.7.1'
  npmVersion = '3.6.0'
  download = true
}


// If you want to use the git release plugin uncomment the next section
/* Configure release task
release {
  grgit = org.ajoberstar.grgit.Grgit.open()
}
tasks.release.dependsOn tasks.clean
tasks.prepare.mustRunAfter tasks.clean
*/

/* Configure XL Release Gradle plugin */
xlReleasePlugin {
  // This enables or disables hot reloading of web and Jython sources
  useSourcesDirectly = true
}


/* Configure this project */
group 'com.xebialabs.xlrelease.xlr-json-viewer-plugin'


task testJavaScriptUnit(type: NpmTask) {
  args = ['test']
}
test.dependsOn testJavaScriptUnit

task testEnd2End(type: NpmTask, dependsOn: startXLRelease) {
  args = ['run', 'protractor']
}
test.dependsOn testEnd2End
testEnd2End.finalizedBy stopXLRelease


sourceSets.main.resources.srcDirs = ["src/main/jython", "src/main/resources"]
sourceSets.test.resources.srcDirs = ["src/test/jython", "src/test/resources"]

task cleanUpTestJython(type: Delete) {
  delete fileTree(dir: "$projectDir/src/test/jython", include: "**/*.class")
}

task jythonClasses(type: Copy) {
  from 'src/main/resources'
  into "${project.buildDir}/classes/main"
  include '**/*.py'
  includeEmptyDirs = false
}

task testJython(type: JavaExec, dependsOn: ['jythonClasses']) {
  main 'org.python.util.jython'
  classpath configurations.jython.asPath
  systemProperties (['python.path': "${project.buildDir}/classes/main"])
  args file("$projectDir/src/test/jython/xlunittestrunner/runtests.py")
  args "$projectDir/src/test/jython"
}

testJython.finalizedBy cleanUpTestJython

test.dependsOn testJython

// Uncomment following line if you implement Java/Scala code depending on XL Release classes
//configurations.compile.extendsFrom configurations.xlReleaseJars

// Uncomment following line if your plugin depends on additional libraries
//dependencies {
//  xlReleaseAdditionalClasspath('additional-jars-required-by-this-xlr-plugin')
//}
